using System.Collections.Generic;
using UnityEngine;
using MEC;

public class InvulnerabilityFrames : MonoBehaviour
{
    private PlayerHealthMO _health;
    private SpriteFlash _flash;

    [Header ("Behavior Settings")]
    [SerializeField] private int _numOfFlash;
    [SerializeField] private float _duration;

    public void Start()
    {
        _health = GetComponent<PlayerHealthMO>();
        _flash = GetComponent<SpriteFlash>();
    }

    public void Flash()
    {
        Timing.RunCoroutine(_FlashCoroutine());
    }

    // IFrame flashing
    private IEnumerator<float> _FlashCoroutine()
    {
        int flashCounter = 0;
        float flashDuration = _duration / _numOfFlash * 0.8f;
        _health.isInvulnerable = true;

        while (flashCounter < _numOfFlash) {
            _flash.PlayDamagedFlashEffect(flashDuration);
            flashCounter++;
            yield return Timing.WaitForSeconds(_duration / _numOfFlash);
        }

        _health.isInvulnerable = false;
    }

}